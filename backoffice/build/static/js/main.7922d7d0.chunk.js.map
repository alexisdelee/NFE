{"version":3,"sources":["components/tools/InputUniversal.tsx","components/tools/StatusItem.ts","components/tools/StatusItemUniversal.tsx","components/tools/DateTool.tsx","components/ticket/TicketItem.tsx","utils/Fetch.ts","Api.ts","components/ticket/TicketList.tsx","components/tools/ListUniversal.tsx","components/tools/EditorUniversal.tsx","components/ticket/TicketContent.tsx","index.tsx"],"names":["InputUniversalType","InputUniversal","_React$Component","props","_this","Object","C_Workspace_Projects_NFE_backoffice_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Workspace_Projects_NFE_backoffice_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Workspace_Projects_NFE_backoffice_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","value","error","readonly","required","C_Workspace_Projects_NFE_backoffice_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Workspace_Projects_NFE_backoffice_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","event","target","reportValidity","setState","checkValidity","type","checkbox","checked","buildGenericType","phone","react__WEBPACK_IMPORTED_MODULE_5__","placeholder","pattern","onChange","bind","onFocus","disabled","number","min","max","eval","className","_StatusItemUniversal__WEBPACK_IMPORTED_MODULE_6__","fields","property","React","defaultProps","Infinity","StatusItemStyle","classname","classCallCheck","StatusItem","Default","Wait","Error","Done","StatusItemUniversal","possibleConstructorReturn","getPrototypeOf","mode","inherits","createClass","classes","push","join","react","title","getAllStyles","Status","DateTool","datetime","Date","now","getTime","prefix","dist_default","a","format","toString","react_timeago_lib_default","date","formatter","buildFormatter","fr","FetchType","TicketItem","ticket","isClosed","includes","status","category","shortname","href","id","style","backgroundColor","color","tracker","name","priority","summary","reporter","pseudo","assignee","updated","DateTool_DateTool","FetchException","_Error","code","message","errors","arguments","length","undefined","wrapNativeSuper","Fetch","address","GET","body","accept","contentType","origin","headers","Headers","content-type","fetch","method","JSON","stringify","_json","asyncToGenerator","regenerator_default","mark","_callee","response","_ref","data","exception","_ref2","_errors","wrap","_context","prev","next","prepareStatement","sent","ok","json","abrupt","Promise","resolve","statusText","get","t0","reject","stop","apply","Path","URL","host","Ticket","_find","_x","_findOne","_callee2","ticketId","_context2","_x2","_find2","_callee3","_context3","Priority","_find3","_callee4","_context4","Tracker","_find4","_callee5","_context5","Region","_find5","_callee6","_context6","TicketList","tickets","Array","_componentDidMount","Api","find","t1","t2","t3","console","map","TicketItem_TicketItem","ListUniversal","items","itemId","onFetch","model","item","updateItem","EditorUniversal","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","_this2","js_default","updateValue","readOnly","selectedTab","onTabChange","trick","concat","minPreviewHeight","minEditorHeight","generateMarkdownPreview","markdown","makeHtml","TicketContent","archived","findOne","ref","description","btoa","lib","align","xs","src","created","md","ListUniversal_ListUniversal","updateListUniversal","fetchListUniversal","region","text","EditorUniversal_EditorUniversal","atob","updateEditorUniversal","render","sm","TicketList_TicketList","document","querySelector","TicketContent_TicketContent"],"mappings":"06CA0BYA,oRAeL,IAAMC,eAAb,SAAAC,kBASI,SAAAD,eAAYE,GAA6B,IAAAC,EAAA,OAAAC,OAAAC,uHAAA,EAAAD,CAAAE,KAAAN,iBACrCG,EAAAC,OAAAG,kIAAA,EAAAH,CAAAE,KAAAF,OAAAI,uHAAA,EAAAJ,CAAAJ,gBAAAS,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,MAAOT,EAAMS,MACbC,MAAO,KACPC,SAAUX,EAAMW,SAChBC,SAAUZ,EAAMY,UAPiBX,EAT7C,OAAAC,OAAAW,iHAAA,EAAAX,CAAAJ,eAAAC,kBAAAG,OAAAY,oHAAA,EAAAZ,CAAAJ,eAAA,EAAAiB,IAAA,gBAAAN,MAAA,SAoB0BO,GAClBA,EAAMC,OAAOC,iBACbd,KAAKe,SAAS,CAAET,OAAQM,EAAMC,OAAOG,kBAEjChB,KAAKJ,MAAMqB,MAAQxB,mBAAmByB,SACtClB,KAAKe,SAAS,CAAEV,MAAOO,EAAMC,OAAOM,UAEpCnB,KAAKe,SAAS,CAAEV,MAAOO,EAAMC,OAAOR,UA3BhD,CAAAM,IAAA,mBAAAN,MAAA,SAAAe,mBAgCQ,OAAIpB,KAAKJ,MAAMqB,MAAQxB,mBAAmB4B,MAC/BC,mCAAA,uBACKL,KAAOjB,KAAKJ,MAAMqB,KAClBZ,MAAQL,KAAKI,MAAMC,MACnBkB,YAAcvB,KAAKJ,MAAM4B,SAAW,iBACpCA,QAAUxB,KAAKJ,MAAM4B,SAAW,iBAChCC,SAAWzB,KAAKgB,cAAcU,KAAK1B,MACnC2B,QAAU3B,KAAKgB,cAAcU,KAAK1B,MAClC4B,SAAW5B,KAAKI,MAAMG,SACtBC,SAAWR,KAAKI,MAAMI,WAC3BR,KAAKJ,MAAMqB,MAAQxB,mBAAmBoC,OACtCP,mCAAA,uBACKL,KAAOjB,KAAKJ,MAAMqB,KAClBZ,MAAQL,KAAKI,MAAMC,MACnByB,IAAM9B,KAAKJ,MAAMkC,IACjBC,IAAM/B,KAAKJ,MAAMmC,IACjBN,SAAWzB,KAAKgB,cAAcU,KAAK1B,MACnC2B,QAAU3B,KAAKgB,cAAcU,KAAK1B,MAClC4B,SAAW5B,KAAKI,MAAMG,SACtBC,SAAWR,KAAKI,MAAMI,WAC3BR,KAAKJ,MAAMqB,MAAQxB,mBAAmByB,SACtCI,mCAAA,uBACKL,KAAOjB,KAAKJ,MAAMqB,KAClBE,QAAUa,KAAKhC,KAAKI,MAAMC,OAC1BoB,SAAWzB,KAAKgB,cAAcU,KAAK1B,MACnC4B,SAAW5B,KAAKI,MAAMG,SACtBC,SAAWR,KAAKI,MAAMI,WAG/Bc,mCAAA,uBACKL,KAAOjB,KAAKJ,MAAMqB,KAClBZ,MAAQL,KAAKI,MAAMC,MACnBoB,SAAWzB,KAAKgB,cAAcU,KAAK1B,MACnC2B,QAAU3B,KAAKgB,cAAcU,KAAK1B,MAClC4B,SAAW5B,KAAKI,MAAMG,SACtBC,SAAWR,KAAKI,MAAMI,aAnE1C,CAAAG,IAAA,SAAAN,MAAA,WAuEQ,OAAOiB,mCAAA,uBAAOW,UAAU,mBACpBX,mCAAA,2BACIA,mCAAA,wBACIA,mCAAA,oBAAIW,UAAU,2BACVX,mCAAA,cAACY,kDAAA,EAAD,CACIC,OAASnC,KAAKJ,MAAMwC,SACpB9B,MAAQN,KAAKI,MAAME,MACnBC,SAAWP,KAAKI,MAAMG,YAE9Be,mCAAA,wBAAMtB,KAAKJ,MAAMwC,UAAYpC,KAAKI,MAAMI,SAAW,IAAM,KACzDc,mCAAA,wBAEQtB,KAAKoB,2BAnFjC1B,eAAA,CAAoC2C,8CAAvB3C,eACK4C,aAAe,CACzBd,QAAS,KACTjB,UAAU,EACVC,UAAU,EACVsB,KAAMS,IACNR,IAAKQ,oFC/CPC,EACF,SAAAA,EAAmCC,GAAoB3C,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAwC,GAAAxC,KAAAyC,aAItCE,aAMjB,SAAAA,EAA4BhC,EAA6BN,GAAyBP,OAAA4C,EAAA,EAAA5C,CAAAE,KAAA2C,GAAA3C,KAAAW,MAAAX,KAAAK,+DAI9E,OAAOL,KAAKW,aAVCgC,EACHC,QAAU,IAAID,EAAW,UAAW,IAAIH,EAAgB,+BADrDG,EAEHE,KAAO,IAAIF,EAAW,OAAQ,IAAIH,EAAgB,gCAF/CG,EAGHG,MAAQ,IAAIH,EAAW,QAAS,IAAIH,EAAgB,+BAHjDG,EAIHI,KAAO,IAAIJ,EAAW,OAAQ,IAAIH,EAAgB,sECU7D,IAAMQ,EAAb,SAAArD,GAOI,SAAAqD,EAAYpD,GAAkC,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAgD,IAC1CnD,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAAkD,GAAA7C,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT+C,KAAM,KACN5C,SAAUX,EAAMW,UALsBV,EAPlD,OAAAC,OAAAsD,EAAA,EAAAtD,CAAAkD,EAAArD,GAAAG,OAAAuD,EAAA,EAAAvD,CAAAkD,EAAA,EAAArC,IAAA,4BAAAN,MAAA,SAgBqCT,GACV,MAAfA,EAAMU,OACNN,KAAKe,SAAS,CAAEoC,KAAMvD,EAAMU,MAAQqC,EAAWG,MAAQH,EAAWI,SAlB9E,CAAApC,IAAA,eAAAN,MAAA,WAuBQ,IAAIiD,EAAyB,CAAEX,EAAWC,QAAQvC,MAAMoC,WAUxD,OARKzC,KAAKI,MAAMG,WACZ+C,EAAQC,KAAKZ,EAAWE,KAAKxC,MAAMoC,WAEZ,MAAnBzC,KAAKI,MAAM+C,MACXG,EAAQC,KAAKvD,KAAKI,MAAM+C,KAAK9C,MAAMoC,YAIpCa,EAAQE,KAAK,OAjC5B,CAAA7C,IAAA,SAAAN,MAAA,WAqCQ,OAAOoD,EAAA,cAACA,EAAA,SAAD,KACHA,EAAA,sBAAMC,MAAQ,oIAA6HzB,UAAYjC,KAAK2D,gBAAoB3D,KAAKI,MAAMG,SAAiB,GAAN,UAtClNyC,EAAA,CAAyCX,aAA5BW,EACKV,aAAe,CACzB/B,UAAU,GAFLyC,EAKKY,gXCXLC,SAAb,SAAAlE,GAQI,SAAAkE,EAAYjE,GAAuB,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAA6D,IAC/BhE,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAA+D,GAAA1D,KAAAH,KAAMJ,KAHFkE,cAE2B,EAG3BlE,EAAMkE,oBAAoBC,KAC1BlE,EAAKiE,SAAWlE,EAAMkE,SAEtBjE,EAAKiE,SAAW,IAAIC,KAAKnE,EAAMkE,UANJjE,EARvC,OAAAC,OAAAsD,EAAA,EAAAtD,CAAA+D,EAAAlE,GAAAG,OAAAuD,EAAA,EAAAvD,CAAA+D,EAAA,EAAAlD,IAAA,SAAAN,MAAA,WAmBQ,OAAK0D,KAAKC,MAAQhE,KAAK8D,SAASG,WAAc,MACnCR,EAAA,cAACA,EAAA,SAAD,KACDzD,KAAKJ,MAAMsE,OACbT,EAAA,cAACU,EAAAC,EAAD,CAAQC,OAAO,yBAAuBrE,KAAK8D,SAASQ,aAGjDb,EAAA,cAACc,EAAAH,EAAD,CAASI,KAAOxE,KAAK8D,SAASQ,WAAaG,UAAYZ,EAASY,gBAzBnFZ,EAAA,CAA8BxB,cAAjBwB,EACFvB,aAAe,CAClB4B,OAAQ,IAFHL,EAKMY,UAAiBC,IAAeC,KCF5C,IChBKC,EDgBCC,EAAb,SAAAlF,GACI,SAAAkF,EAAYjF,GAAqB,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAA6E,IAC7BhF,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAA+E,GAAA1E,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT0E,OAAQjF,EAAKD,MAAMkF,OACnBC,SAAU,CAAC,OAAQ,YAAYC,SAASnF,EAAKD,MAAMkF,OAAOG,OAAOC,SAASC,YALjDtF,EADrC,OAAAC,OAAAsD,EAAA,EAAAtD,CAAA+E,EAAAlF,GAAAG,OAAAuD,EAAA,EAAAvD,CAAA+E,EAAA,EAAAlE,IAAA,SAAAN,MAAA,WAWQ,OAAIL,KAAKI,MAAM0E,OACJrB,EAAA,oBAAIxB,UAAYjC,KAAKI,MAAM2E,SAAW,qBAAuB,eAChEtB,EAAA,oBAAIxB,UAAU,uBAAsBwB,EAAA,uBAAOxC,KAAK,cAChDwC,EAAA,oBAAIxB,UAAU,mBACVwB,EAAA,mBAAG2B,KAAO,YAAcpF,KAAKI,MAAM0E,OAAOO,IAAOrF,KAAKI,MAAM0E,OAAOO,KAEvE5B,EAAA,oBAAIxB,UAAU,qBAAqBqD,MAAO,CAAEC,gBAA4C,MAA3BvF,KAAKI,MAAM0E,OAAOU,MAAgB,GAAK,IAAMxF,KAAKI,MAAM0E,OAAOU,SAC5H/B,EAAA,oBAAIxB,UAAU,wBACVwB,EAAA,mBAAG2B,KAAO,oBAAsBpF,KAAKI,MAAM0E,OAAOW,QAAQJ,IAAOrF,KAAKI,MAAM0E,OAAOW,QAAQC,OAE/FjC,EAAA,oBAAIxB,UAAU,uBACVwB,EAAA,mBAAG2B,KAAO,mBAAqBpF,KAAKI,MAAM0E,OAAOG,OAAOI,IAAOrF,KAAKI,MAAM0E,OAAOG,OAAOS,OAE5FjC,EAAA,oBAAIxB,UAAU,yBACVwB,EAAA,mBAAG2B,KAAO,qBAAuBpF,KAAKI,MAAM0E,OAAOa,SAASN,IAAOrF,KAAKI,MAAM0E,OAAOa,SAASD,OAElGjC,EAAA,oBAAIxB,UAAU,wBACVwB,EAAA,mBAAG2B,KAAO,YAAcpF,KAAKI,MAAM0E,OAAOO,IAAOrF,KAAKI,MAAM0E,OAAOc,UAEvEnC,EAAA,oBAAIxB,UAAU,4BACVwB,EAAA,mBAAG2B,KAAqC,MAA9BpF,KAAKI,MAAM0E,OAAOe,SAAmB,IAAM,qBAAuB7F,KAAKI,MAAM0E,OAAOe,SAASR,IAAqC,MAA9BrF,KAAKI,MAAM0E,OAAOe,SAAmB,GAAK7F,KAAKI,MAAM0E,OAAOe,SAASC,SAEvLrC,EAAA,oBAAIxB,UAAU,0BACVwB,EAAA,mBAAG2B,KAAqC,MAA9BpF,KAAKI,MAAM0E,OAAOiB,SAAmB,IAAM,qBAAuB/F,KAAKI,MAAM0E,OAAOiB,SAASV,IAAqC,MAA9BrF,KAAKI,MAAM0E,OAAOiB,SAAmB,GAAK/F,KAAKI,MAAM0E,OAAOiB,SAASD,SAEvLrC,EAAA,oBAAIxB,UAAU,0BAENjC,KAAKI,MAAM0E,OAAOkB,SAAWvC,EAAA,cAACwC,EAAD,CAAUnC,SAAW9D,KAAKI,MAAM0E,OAAOkB,WAG5EvC,EAAA,oBAAIxB,UAAU,uBAIf,SA7Cf4C,EAAA,CAAgCxC,+BChBpBuC,uEAOL,IAAMsB,EAAb,SAAAC,GACI,SAAAD,EAAmBE,EAAcC,GAAoD,IAAAxG,EAA5ByG,EAA4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAI,OAAAzG,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAkG,IACjFrG,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAAoG,GAAA/F,KAAAH,KAAMqG,KAD2ED,OAAAvG,EAAAyG,SAAAzG,EADzF,OAAAC,OAAAsD,EAAA,EAAAtD,CAAAoG,EAAAC,GAAAD,EAAA,CAAApG,OAAA4G,EAAA,EAAA5G,CAAoCgD,QAMvB6D,EAAb,WAKI,SAAAA,EAA4BC,GAA6F,IAArE3F,EAAqEsF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnD3B,EAAUiC,IAAYC,EAA6BP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,IAAIzG,OAAUA,OAAA4C,EAAA,EAAA5C,CAAAE,KAAA2G,GAAA3G,KAAA4G,UAAA5G,KAAAiB,OAAAjB,KAAA8G,OAAA9G,KAJlH+G,OAAiB,mBAIiG/G,KAHlHgH,YAAsB,mBAG4FhH,KAFlHiH,OAAiB,kBAH5B,OAAAnH,OAAAuD,EAAA,EAAAvD,CAAA6G,EAAA,EAAAhG,IAAA,mBAAAN,MAAA,WASQ,IAAM6G,EAAmB,IAAIC,QAAQ,CACjCJ,OAAQ/G,KAAK+G,OACbK,eAAgBpH,KAAKgH,YACrBC,OAAQjH,KAAKiH,SAGjB,OAAIjH,KAAKiB,MAAQ2D,EAAUiC,IAChBQ,MAAMrH,KAAK4G,QAAS,CACvBU,OAAQtH,KAAKiB,KACbiG,YAGGG,MAAMrH,KAAK4G,QAAS,CACvBU,OAAQtH,KAAKiB,KACbiG,UACAJ,KAAMS,KAAKC,UAAUxH,KAAK8G,UAxB1C,CAAAnG,IAAA,OAAAN,MAAA,eAAAoH,EAAA3H,OAAA4H,EAAA,EAAA5H,CAAA6H,EAAAvD,EAAAwD,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAvD,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EA+B6CvI,KAAKwI,mBA/BlD,YA+BkBV,EA/BlBO,EAAAI,MAiCyBC,GAjCzB,CAAAL,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAkCuCT,EAASa,OAlChD,cAAAZ,EAAAM,EAAAI,KAkCwBT,EAlCxBD,EAkCwBC,KAlCxBK,EAAAO,OAAA,SAmCuBC,QAAQC,QAAWd,IAnC1C,WAqCsBC,EAA4B,IAAI/B,EAAe4B,EAAS7C,OAAQ6C,EAASiB,aAE3EjB,EAASZ,QAAQ8B,IAAI,gBAAgBhE,SAAS,oBAvClE,CAAAqD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAwC6CT,EAASa,OAxCtD,QAAAT,EAAAG,EAAAI,KAwC4BnC,EAxC5B4B,EAwC4B5B,OACR2B,EAAU3B,OAASA,EAzCvC,cA4CsB2B,EA5CtB,QAAAI,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAAAA,EAAAO,OAAA,SA+CmBC,QAAQK,OAARb,EAAAY,KA/CnB,yBAAAZ,EAAAc,SAAAtB,EAAA7H,KAAA,sCAAAyH,EAAA2B,MAAApJ,KAAAuG,YAAA,MAAAI,EAAA,GCNa0C,EAAb,oBAAAA,IAAAvJ,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAqJ,GAAA,OAAAvJ,OAAAuD,EAAA,EAAAvD,CAAAuJ,EAAA,OAAA1I,IAAA,UAAAN,MAAA,SAG0BuG,GAClB,OAAO,IAAI0C,IAAI1C,EAASyC,EAAKE,MAAMnE,SAJ3CiE,EAAA,GAAaA,EACcE,KAAe,wBAOnC,IAAMC,EAAb,oBAAAA,IAAA1J,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAwJ,GAAA,OAAA1J,OAAAuD,EAAA,EAAAvD,CAAA0J,EAAA,OAAA7I,IAAA,OAAAN,MAAA,eAAAoJ,EAAA3J,OAAA4H,EAAA,EAAA5H,CAAA6H,EAAAvD,EAAAwD,KAAA,SAAAC,EAC6BjB,GAD7B,OAAAe,EAAAvD,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEqB,IAAI5B,EAAsB0C,EAAKP,QAAQlC,IAAU+B,OAFtE,cAAAN,EAAAO,OAAA,SAAAP,EAAAI,MAAA,wBAAAJ,EAAAc,SAAAtB,MAAA,gBAAA6B,GAAA,OAAAD,EAAAL,MAAApJ,KAAAuG,YAAA,KAAA5F,IAAA,UAAAN,MAAA,eAAAsJ,EAAA7J,OAAA4H,EAAA,EAAA5H,CAAA6H,EAAAvD,EAAAwD,KAAA,SAAAgC,EAKgCC,GALhC,OAAAlC,EAAAvD,EAAAgE,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EAMqB,IAAI5B,EAAe0C,EAAKP,QAAQ,YAAce,IAAWlB,OAN9E,cAAAmB,EAAAlB,OAAA,SAAAkB,EAAArB,MAAA,wBAAAqB,EAAAX,SAAAS,MAAA,gBAAAG,GAAA,OAAAJ,EAAAP,MAAApJ,KAAAuG,YAAA,MAAAiD,EAAA,GAUa5F,EAAb,oBAAAA,IAAA9D,OAAA4C,EAAA,EAAA5C,CAAAE,KAAA4D,GAAA,OAAA9D,OAAAuD,EAAA,EAAAvD,CAAA8D,EAAA,OAAAjD,IAAA,OAAAN,MAAA,eAAA2J,EAAAlK,OAAA4H,EAAA,EAAA5H,CAAA6H,EAAAvD,EAAAwD,KAAA,SAAAqC,IAAA,OAAAtC,EAAAvD,EAAAgE,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA3B,KAAA,EAEqB,IAAI5B,EAAsB0C,EAAKP,QAAQ,YAAYH,OAFxE,cAAAuB,EAAAtB,OAAA,SAAAsB,EAAAzB,MAAA,wBAAAyB,EAAAf,SAAAc,MAAA,yBAAAD,EAAAZ,MAAApJ,KAAAuG,YAAA,MAAA3C,EAAA,GAMauG,EAAb,oBAAAA,IAAArK,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAmK,GAAA,OAAArK,OAAAuD,EAAA,EAAAvD,CAAAqK,EAAA,OAAAxJ,IAAA,OAAAN,MAAA,eAAA+J,EAAAtK,OAAA4H,EAAA,EAAA5H,CAAA6H,EAAAvD,EAAAwD,KAAA,SAAAyC,IAAA,OAAA1C,EAAAvD,EAAAgE,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EAEqB,IAAI5B,EAAwB0C,EAAKP,QAAQ,gBAAgBH,OAF9E,cAAA2B,EAAA1B,OAAA,SAAA0B,EAAA7B,MAAA,wBAAA6B,EAAAnB,SAAAkB,MAAA,yBAAAD,EAAAhB,MAAApJ,KAAAuG,YAAA,MAAA4D,EAAA,GAMaI,EAAb,oBAAAA,IAAAzK,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAuK,GAAA,OAAAzK,OAAAuD,EAAA,EAAAvD,CAAAyK,EAAA,OAAA5J,IAAA,OAAAN,MAAA,eAAAmK,EAAA1K,OAAA4H,EAAA,EAAA5H,CAAA6H,EAAAvD,EAAAwD,KAAA,SAAA6C,IAAA,OAAA9C,EAAAvD,EAAAgE,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EAEqB,IAAI5B,EAAuB0C,EAAKP,QAAQ,cAAcH,OAF3E,cAAA+B,EAAA9B,OAAA,SAAA8B,EAAAjC,MAAA,wBAAAiC,EAAAvB,SAAAsB,MAAA,yBAAAD,EAAApB,MAAApJ,KAAAuG,YAAA,MAAAgE,EAAA,GAMaI,EAAb,oBAAAA,IAAA7K,OAAA4C,EAAA,EAAA5C,CAAAE,KAAA2K,GAAA,OAAA7K,OAAAuD,EAAA,EAAAvD,CAAA6K,EAAA,OAAAhK,IAAA,OAAAN,MAAA,eAAAuK,EAAA9K,OAAA4H,EAAA,EAAA5H,CAAA6H,EAAAvD,EAAAwD,KAAA,SAAAiD,IAAA,OAAAlD,EAAAvD,EAAAgE,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EAEqB,IAAI5B,EAAsB0C,EAAKP,QAAQ,aAAaH,OAFzE,cAAAmC,EAAAlC,OAAA,SAAAkC,EAAArC,MAAA,wBAAAqC,EAAA3B,SAAA0B,MAAA,yBAAAD,EAAAxB,MAAApJ,KAAAuG,YAAA,MAAAoE,EAAA,GCvBaI,eAAb,SAAApL,GACI,SAAAoL,EAAYnL,GAAyB,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAA+K,IACjClL,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAAiL,GAAA5K,KAAAH,KAAMJ,KAEDQ,MAAQ,CAAE4K,QAAS,IAAIC,OAHKpL,EADzC,OAAAC,OAAAsD,EAAA,EAAAtD,CAAAiL,EAAApL,GAAAG,OAAAuD,EAAA,EAAAvD,CAAAiL,EAAA,EAAApK,IAAA,oBAAAN,MAAA,eAAA6K,EAAApL,OAAA4H,EAAA,EAAA5H,CAAA6H,EAAAvD,EAAAwD,KAAA,SAAAC,IAAA,OAAAF,EAAAvD,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAY,GASYjJ,KATZqI,EAAAE,KAAA,EAS2C4C,EAAWC,KAAKpL,KAAKJ,MAAMgH,SATtE,OAAAyB,EAAAgD,GAAAhD,EAAAI,KAAAJ,EAAAiD,GAAA,CAS4BN,QAT5B3C,EAAAgD,IAAAhD,EAAAY,GASiBlI,SATjBZ,KAAAkI,EAAAY,GAAAZ,EAAAiD,IAAAjD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAkD,GAAAlD,EAAA,SAWYmD,QAAQlL,MAAR+H,EAAAkD,IAXZ,yBAAAlD,EAAAc,SAAAtB,EAAA7H,KAAA,qCAAAkL,EAAA9B,MAAApJ,KAAAuG,YAAA,KAAA5F,IAAA,SAAAN,MAAA,WAgBQ,OAAOoD,EAAA,uBAAOxB,UAAU,eACpBwB,EAAA,2BACIA,EAAA,wBACIA,EAAA,wBAAIA,EAAA,uBAAOxC,KAAK,WAAWyC,MAAM,+BACjCD,EAAA,6BACAA,EAAA,yBACAA,EAAA,mCACAA,EAAA,kCACAA,EAAA,uCACAA,EAAA,iCACAA,EAAA,0CACAA,EAAA,2CACAA,EAAA,sDACAA,EAAA,kCAGRA,EAAA,uBAAOxB,UAAU,wBAETjC,KAAKI,MAAM4K,QAAQS,IAAI,SAAA3G,GACnB,OAAOrB,EAAA,cAACiI,EAAD,CAAY5G,OAASA,YAnCpDiG,EAAA,CAAgC1I,sBCOnBsJ,SAAb,SAAAhM,GAMI,SAAAgM,EAAY/L,GAA4B,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAA2L,IACpC9L,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAA6L,GAAAxL,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTwL,MAAO,KACPC,OAAQhM,EAAKD,MAAMS,MAAMgF,GACzB/E,MAAO,KACPE,SAAUZ,EAAMY,SAChBD,SAAUX,EAAMW,UARgBV,EAN5C,OAAAC,OAAAsD,EAAA,EAAAtD,CAAA6L,EAAAhM,GAAAG,OAAAuD,EAAA,EAAAvD,CAAA6L,EAAA,EAAAhL,IAAA,oBAAAN,MAAA,eAAA6K,EAAApL,OAAA4H,EAAA,EAAA5H,CAAA6H,EAAAvD,EAAAwD,KAAA,SAAAC,IAAA,OAAAF,EAAAvD,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAoBYjJ,KApBZqI,EAAAE,KAAA,EAoByCvI,KAAKJ,MAAMkM,QAAQ9L,KAAKJ,MAAMmM,OApBvE,OAAA1D,EAAAgD,GAAAhD,EAAAI,KAAAJ,EAAAiD,GAAA,CAoB4BM,MApB5BvD,EAAAgD,IAAAhD,EAAAY,GAoBiBlI,SApBjBZ,KAAAkI,EAAAY,GAAAZ,EAAAiD,IAAAjD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAkD,GAAAlD,EAAA,SAsBYmD,QAAQlL,MAAR+H,EAAAkD,IAtBZ,yBAAAlD,EAAAc,SAAAtB,EAAA7H,KAAA,qCAAAkL,EAAA9B,MAAApJ,KAAAuG,YAAA,KAAA5F,IAAA,aAAAN,MAAA,SA0BuBO,GACf,IAAKZ,KAAKI,MAAMG,SAAU,CACtB,IAAMsL,GAAkBjL,EAAMC,OAAOR,MAC/B2L,EAAOhM,KAAKI,MAAMwL,MAAMR,KAAK,SAAAY,GAAI,OAAIA,EAAK3G,KAAOwG,IAEvD,QAAYpF,GAARuF,GAAqBhM,KAAKI,MAAMI,SAEhC,YADAR,KAAKe,SAAS,CAAET,OAAO,IAI3BN,KAAKe,SAAS,CAAE8K,SAAQvL,OAAO,IAC/BN,KAAKJ,MAAM6B,SAASzB,KAAKJ,MAAMmM,MAAOC,EAAMhM,KAAKI,MAAMG,aArCnE,CAAAI,IAAA,SAAAN,MAAA,WA0CQ,OAAIL,KAAKI,MAAMwL,MACJnI,EAAA,uBAAOxB,UAAU,kBACpBwB,EAAA,2BACIA,EAAA,wBACIA,EAAA,oBAAIxB,UAAU,2BACVwB,EAAA,cAACT,EAAA,EAAD,CACIb,OAASnC,KAAKJ,MAAMwC,SACpB9B,MAAQN,KAAKI,MAAME,MACnBC,SAAWP,KAAKI,MAAMG,YAE9BkD,EAAA,wBAAMzD,KAAKJ,MAAMwC,UACjBqB,EAAA,wBACIA,EAAA,wBAAQ7B,SAAW5B,KAAKI,MAAMG,SAAWkB,SAAWzB,KAAKiM,WAAWvK,KAAK1B,MAAQK,MAAQL,KAAKI,MAAMyL,QAE5F7L,KAAKI,MAAMI,UAAYiD,EAAA,6BAGvBzD,KAAKI,MAAMwL,MAAMH,IAAI,SAAAO,GACjB,OAAOvI,EAAA,wBAAQpD,MAAQ2L,EAAK3G,IAAO2G,EAAKtG,aAUjE,SAtEfiG,EAAA,CAAmCtJ,cAAtBsJ,EACKrJ,aAAe,CACzB9B,UAAU,EACVD,UAAU,gCCNL2L,eAAb,SAAAvM,GAOI,SAAAuM,EAAYtM,GAA8B,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAkM,IACtCrM,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAAoM,GAAA/L,KAAAH,KAAMJ,KAHFuM,eAEkC,EAGtCtM,EAAKO,MAAQ,CACTC,MAAOT,EAAMS,MACb8C,KAAM,UACN5C,SAAUX,EAAMW,UAGpBV,EAAKsM,UAAY,IAAIC,YAAmB,CACpCC,QAAQ,EACRC,oBAAoB,EACpBC,eAAe,EACfC,WAAW,IAbuB3M,EAP9C,OAAAC,OAAAsD,EAAA,EAAAtD,CAAAoM,EAAAvM,GAAAG,OAAAuD,EAAA,EAAAvD,CAAAoM,EAAA,EAAAvL,IAAA,cAAAN,MAAA,SAwBwBA,GAChBL,KAAKe,SAAS,CAAEV,UAChBL,KAAKJ,MAAM6B,SAASzB,KAAKJ,MAAMmM,MAAO1L,EAAOL,KAAKI,MAAMG,YA1BhE,CAAAI,IAAA,QAAAN,MAAA,SA6BkB8C,GACLnD,KAAKJ,MAAMW,UACZP,KAAKe,SAAS,SAAAX,GACV,OAAOA,EAAM+C,MAAQA,EAAO,KAAO,CAAEA,YAhCrD,CAAAxC,IAAA,SAAAN,MAAA,WAqCqC,IAAAoM,EAAAzM,KAC7B,OAAOyD,EAAA,cAACA,EAAA,SAAD,KACHA,EAAA,cAACiJ,EAAAtI,EAAD,CACI3C,SAAWzB,KAAK2M,YAAYjL,KAAK1B,MACjCK,MAAQL,KAAKI,MAAMC,MACnBuM,SAAW5M,KAAKJ,MAAMW,SACtBsM,YAAc7M,KAAKI,MAAM+C,KACzB2J,YAAc9M,KAAK+M,MAAMrL,KAAK1B,MAC9BiC,UAAY,CAAE,oBAAqB+K,OAAOhN,KAAKJ,MAAMW,SAAW,yBAA2B,IAAIiD,KAAK,KACpGyJ,iBAAmB,EACnBC,gBAAkB,IAClBC,wBAA0B,SAAAC,GAAQ,OAC9BvE,QAAQC,QAAQ2D,EAAKN,UAAUkB,SAASD,YAjD5DlB,EAAA,CAAqC7J,cAAxB6J,EACK5J,aAAe,CACzB/B,UAAU,eCIL+M,SAAb,SAAA3N,GAQI,SAAA2N,EAAY1N,GAA4B,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAsN,IACpCzN,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAAwN,GAAAnN,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT0E,OAAQlF,EAAMkF,OACdvE,SAAUX,EAAMW,UAAYX,EAAM2N,SAClCA,SAAU3N,EAAM2N,UANgB1N,EAR5C,OAAAC,OAAAsD,EAAA,EAAAtD,CAAAwN,EAAA3N,GAAAG,OAAAuD,EAAA,EAAAvD,CAAAwN,EAAA,EAAA3M,IAAA,oBAAAN,MAAA,eAAA6K,EAAApL,OAAA4H,EAAA,EAAA5H,CAAA6H,EAAAvD,EAAAwD,KAAA,SAAAC,IAAA,IAAA/C,EAAA,OAAA6C,EAAAvD,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAoBqC,MAArBtI,KAAKJ,MAAMkF,OApB3B,CAAAuD,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAqB8C4C,EAAWqC,QAAQxN,KAAKJ,MAAMiK,UArB5E,OAqBsB/E,EArBtBuD,EAAAI,KAsBgBzI,KAAKe,SAAS,CAAE+D,WAtBhC,OAAAuD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAyBYmD,QAAQlL,MAAR+H,EAAAY,IAzBZ,yBAAAZ,EAAAc,SAAAtB,EAAA7H,KAAA,qCAAAkL,EAAA9B,MAAApJ,KAAAuG,YAAA,KAAA5F,IAAA,qBAAAN,MAAA,SA6B+B0L,GACvB,MAAa,UAATA,EACOZ,EAAWC,OACF,YAATW,EACAZ,EAAaC,OACJ,WAATW,EACAZ,EAAYC,OACH,UAATW,EACAZ,EAAWC,OAGfvC,QAAQK,OAAO,mBAxC9B,CAAAvI,IAAA,sBAAAN,MAAA,SA2CgC0L,EAAe0B,EAAiBlN,GACxD,IAAKA,EAAU,CACX,IAAMuE,EAAkB9E,KAAKI,MAAM0E,OACnCA,EAAOiH,GAAS0B,GAAO,KAEvBzN,KAAKe,SAAS,CAAE+D,cAhD5B,CAAAnE,IAAA,wBAAAN,MAAA,SAoDkC0L,EAAe1L,EAAeE,GACxD,IAAKA,GACY,UAATwL,EAAmB,CACnB,IAAMjH,EAAkB9E,KAAKI,MAAM0E,OACnCA,EAAO4I,YAAcrN,EAAQsN,KAAKtN,GAAS,KAE3CL,KAAKe,SAAS,CAAE+D,cA1DhC,CAAAnE,IAAA,SAAAN,MAAA,WAgEQ,OAAIL,KAAKI,MAAM0E,OACJrB,EAAA,yBAASxB,UAAY,CAAE,kBAAmB+K,OAAOhN,KAAKI,MAAMmN,SAAW,2BAA6B,IAAI/J,KAAK,MAChHC,EAAA,4BACIA,EAAA,cAACmK,EAAA,IAAD,CAAUC,MAAM,UACZpK,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,GACXrK,EAAA,qBAAKxB,UAAU,2BAA2ByB,MAAM,SAASqK,IAAI,wGAEjEtK,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,IACXrK,EAAA,qBAAKxB,UAAU,2BACXwB,EAAA,4BAAUzD,KAAKI,MAAM0E,OAAOc,SAAkBnC,EAAA,yBAC9CA,EAAA,4CAAkBA,EAAA,mBAAG2B,KAAO,qBAAuBpF,KAAKI,MAAM0E,OAAOe,SAASR,IAAOrF,KAAKI,MAAM0E,OAAOe,SAASC,QAAhH,IAA6HrC,EAAA,cAACwC,EAAD,CAAUnC,SAAW9D,KAAKI,MAAM0E,OAAOkJ,QAAU9J,OAAO,QAArL,MAEIlE,KAAKI,MAAM0E,OAAOkB,SAAWvC,EAAA,6CAAmBA,EAAA,cAACwC,EAAD,CAAUnC,SAAW9D,KAAKI,MAAM0E,OAAOkB,QAAU9B,OAAO,QAA3E,SAOjDT,EAAA,yBAASxB,UAAU,wBACfwB,EAAA,cAACmK,EAAA,IAAD,KACInK,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,GAAKG,GAAK,GACrBxK,EAAA,cAACyK,EAAD,CACI9L,SAAS,SACT/B,MAAQL,KAAKI,MAAM0E,OAAOG,OAC1B8G,MAAM,SACNtK,SAAWzB,KAAKmO,oBAAoBzM,KAAK1B,MACzC8L,QAAU9L,KAAKoO,mBAAmB1M,KAAK1B,MACvCQ,UAAW,EACXD,SAAWP,KAAKI,MAAMG,YAE9BkD,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,GAAKG,GAAK,GACrBxK,EAAA,cAACyK,EAAD,CACI9L,SAAS,cACT/B,MAAQL,KAAKI,MAAM0E,OAAOa,SAC1BoG,MAAM,WACNtK,SAAWzB,KAAKmO,oBAAoBzM,KAAK1B,MACzC8L,QAAU9L,KAAKoO,mBAAmB1M,KAAK1B,MACvCQ,UAAW,EACXD,SAAWP,KAAKI,MAAMG,aAIlCkD,EAAA,cAACmK,EAAA,IAAD,KACInK,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,GAAKG,GAAK,GACrBxK,EAAA,cAAC/D,EAAA,EAAD,CACI0C,SAAS,UACT/B,MAAQL,KAAKI,MAAM0E,OAAOU,MAAQ,IAAMxF,KAAKI,MAAM0E,OAAOU,MAAQ,UAClEvE,KAAOxB,IAAmB+F,MAC1BhF,UAAW,EACXD,SAAWP,KAAKI,MAAMG,YAE9BkD,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,GAAKG,GAAK,GACrBxK,EAAA,cAACyK,EAAD,CACI9L,SAAS,eACT/B,MAAQL,KAAKI,MAAM0E,OAAOW,QAC1BsG,MAAM,UACNtK,SAAWzB,KAAKmO,oBAAoBzM,KAAK1B,MACzC8L,QAAU9L,KAAKoO,mBAAmB1M,KAAK1B,MACvCQ,UAAW,EACXD,UAAW,MAIvBkD,EAAA,cAACmK,EAAA,IAAD,KACInK,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,GAAKG,GAAK,GACrBxK,EAAA,cAACyK,EAAD,CACI9L,SAAS,YACT/B,MAAQL,KAAKI,MAAM0E,OAAOuJ,OAC1BtC,MAAM,SACNtK,SAAWzB,KAAKmO,oBAAoBzM,KAAK1B,MACzC8L,QAAU9L,KAAKoO,mBAAmB1M,KAAK1B,MACvCQ,UAAW,EACXD,UAAW,MAUvBkD,EAAA,yBAEAA,EAAA,cAACmK,EAAA,IAAD,KACInK,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,GAAKG,GAAK,GACrBxK,EAAA,cAAC/D,EAAA,EAAD,CACI0C,SAAS,SACT/B,MAAM,OACNY,KAAOxB,IAAmB6O,KAC1B9N,UAAW,EACXD,UAAW,KAEnBkD,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,GAAKG,GAAK,GACrBxK,EAAA,cAAC/D,EAAA,EAAD,CACI0C,SAAS,MACT/B,MAAM,GACNY,KAAOxB,IAAmBoC,OAC1BC,IAAM,EACNC,IAAM,IACNvB,UAAW,EACXD,SAAWP,KAAKI,MAAMG,aAIlCkD,EAAA,qBAAKxB,UAAU,+BACXwB,EAAA,cAAC8K,EAAD,CACIlO,MAAQL,KAAKI,MAAM0E,OAAO4I,YAAcc,KAAKxO,KAAKI,MAAM0E,OAAO4I,aAAe,GAC9E3B,MAAM,SACNtK,SAAWzB,KAAKyO,sBAAsB/M,KAAK1B,MAC3CO,SAAWP,KAAKI,MAAMG,cAMnC,SArLf+M,EAAA,CAAmCjL,cAAtBiL,EACKhL,aAAoC,CAC9CwC,OAAQ,KACR+E,SAAU,EACVtJ,UAAU,EACVgN,UAAU,GC5BlBmB,iBACIjL,EAAA,cAACmK,EAAA,IAAD,KACInK,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,GAAKa,GAAK,GACrBlL,EAAA,cAACmL,EAAD,CAAYhI,QAAQ,uBAExBnD,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,EAAIa,GAAK,KAE5BE,SAASC,cAAc,UAG3BJ,iBACIjL,EAAA,cAACmK,EAAA,IAAD,KACInK,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,GAAKa,GAAK,GACrBlL,EAAA,cAACsL,EAAD,CAAelF,SAAW,KAE9BpG,EAAA,cAACmK,EAAA,IAAD,CAAUE,GAAK,EAAIa,GAAK,KAE5BE,SAASC,cAAc","file":"static/js/main.7922d7d0.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nimport { StatusItemUniversal } from \"./StatusItemUniversal\";\r\n\r\nimport \"./InputUniversal.scss\";\r\n\r\n// Props\r\ninterface IInputUniversalProps {\r\n    property: string;\r\n    value: string | number;\r\n    type: InputUniversalType;\r\n    pattern: string;\r\n    min: number;\r\n    max: number;\r\n    readonly: boolean;\r\n    required: boolean;\r\n}\r\n\r\n// State\r\ninterface IInputUniversalState {\r\n    value: string | number;\r\n    error: boolean,\r\n    readonly: boolean;\r\n    required: boolean;\r\n}\r\n\r\nexport enum InputUniversalType {\r\n    checkbox = \"checkbox\",\r\n    color = \"color\",\r\n    time = \"time\",\r\n    date = \"date\",\r\n    week = \"week\",\r\n    month = \"month\",\r\n    email = \"email\",\r\n    file = \"file\",\r\n    number = \"number\",\r\n    confidential = \"password\",\r\n    phone = \"tel\",\r\n    text = \"text\"\r\n};\r\n\r\nexport class InputUniversal extends React.Component<IInputUniversalProps, IInputUniversalState> {\r\n    public static defaultProps = {\r\n        pattern: null,\r\n        readonly: false,\r\n        required: false,\r\n        min: -Infinity,\r\n        max: Infinity\r\n    };\r\n\r\n    constructor(props: IInputUniversalProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: props.value,\r\n            error: null,\r\n            readonly: props.readonly,\r\n            required: props.required\r\n        };\r\n    }\r\n\r\n    private checkValidity(event): void {\r\n        event.target.reportValidity();\r\n        this.setState({ error: !event.target.checkValidity() });\r\n\r\n        if (this.props.type == InputUniversalType.checkbox) {\r\n            this.setState({ value: event.target.checked });\r\n        } else {\r\n            this.setState({ value: event.target.value });\r\n        }\r\n    }\r\n\r\n    private buildGenericType(): React.ReactNode {\r\n        if (this.props.type == InputUniversalType.phone) {\r\n            return <input \r\n                        type={ this.props.type } \r\n                        value={ this.state.value } \r\n                        placeholder={ this.props.pattern || \"0[6-9][0-9]{8}\" } \r\n                        pattern={ this.props.pattern || \"0[6-9][0-9]{8}\" } \r\n                        onChange={ this.checkValidity.bind(this) } \r\n                        onFocus={ this.checkValidity.bind(this) } \r\n                        disabled={ this.state.readonly } \r\n                        required={ this.state.required } />\r\n        } else if (this.props.type == InputUniversalType.number) {\r\n            return <input \r\n                        type={ this.props.type } \r\n                        value={ this.state.value } \r\n                        min={ this.props.min } \r\n                        max={ this.props.max } \r\n                        onChange={ this.checkValidity.bind(this) } \r\n                        onFocus={ this.checkValidity.bind(this) } \r\n                        disabled={ this.state.readonly } \r\n                        required={ this.state.required } />\r\n        } else if (this.props.type == InputUniversalType.checkbox) {\r\n            return <input \r\n                        type={ this.props.type } \r\n                        checked={ eval(this.state.value as string) as boolean } \r\n                        onChange={ this.checkValidity.bind(this) } \r\n                        disabled={ this.state.readonly } \r\n                        required={ this.state.required } />\r\n        }\r\n\r\n        return <input \r\n                    type={ this.props.type } \r\n                    value={ this.state.value } \r\n                    onChange={ this.checkValidity.bind(this) } \r\n                    onFocus={ this.checkValidity.bind(this) } \r\n                    disabled={ this.state.readonly }\r\n                    required={ this.state.required } />;\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        return <table className=\"input-universal\">\r\n            <tbody>\r\n                <tr>\r\n                    <td className=\"input-universal__status\">\r\n                        <StatusItemUniversal\r\n                            fields={ this.props.property } \r\n                            error={ this.state.error }\r\n                            readonly={ this.state.readonly } />\r\n                    </td>\r\n                    <th>{ this.props.property + (this.state.required ? \"*\" : \"\") }</th>\r\n                    <td>\r\n                        {\r\n                            this.buildGenericType()\r\n                        }\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>;\r\n    }\r\n}\r\n","class StatusItemStyle {\r\n    public constructor(public readonly classname: string) {\r\n    }\r\n}\r\n\r\nexport default class StatusItem {\r\n    public static Default = new StatusItem(\"Default\", new StatusItemStyle(\"universal__status__default\"));\r\n    public static Wait = new StatusItem(\"Wait\", new StatusItemStyle(\"universal__status__editable\"));\r\n    public static Error = new StatusItem(\"Error\", new StatusItemStyle(\"universal__status__invalid\"));\r\n    public static Done = new StatusItem(\"Done\", new StatusItemStyle(\"universal__status__modified\"));\r\n\r\n    private constructor(private key: string, public readonly value: StatusItemStyle) {\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.key;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport StatusItem from \"./StatusItem\";\r\n\r\nimport \"./StatusItemUniversal.scss\";\r\n\r\n// Props\r\ninterface IStatusItemUniversalProps {\r\n    fields: string;\r\n    error: boolean;\r\n    readonly: boolean;\r\n}\r\n\r\n// State\r\ninterface IStatusItemUniversalState {\r\n    mode: StatusItem;\r\n    readonly: boolean;\r\n}\r\n\r\nexport class StatusItemUniversal extends React.Component<IStatusItemUniversalProps, IStatusItemUniversalState> {\r\n    public static defaultProps = {\r\n        readonly: false\r\n    };\r\n\r\n    public static Status: StatusItem;\r\n    \r\n    constructor(props: IStatusItemUniversalProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mode: null,\r\n            readonly: props.readonly\r\n        };\r\n    }\r\n\r\n    public componentWillReceiveProps(props): void {\r\n        if (props.error != null) {\r\n            this.setState({ mode: props.error ? StatusItem.Error : StatusItem.Done });\r\n        }\r\n    }\r\n\r\n    private getAllStyles(): string {\r\n        let classes: Array<string> = [ StatusItem.Default.value.classname ];\r\n\r\n        if (!this.state.readonly) {\r\n            classes.push(StatusItem.Wait.value.classname);\r\n\r\n            if (this.state.mode != null) {\r\n                classes.push(this.state.mode.value.classname);\r\n            }\r\n        }\r\n\r\n        return classes.join(\" \");\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        return <React.Fragment>\r\n            <span title={ \"orange = champs à renseigner\\nrouge = une erreur est survenue\\nvert = modification effectuée sans rencontrer de problème\" } className={ this.getAllStyles() }>{ !this.state.readonly ? \"?\" : \"\" }</span>\r\n        </React.Fragment>;\r\n    };\r\n}\r\n","import * as React from \"react\";\r\nimport TimeAgo from \"react-timeago\";\r\nimport fr from \"react-timeago/lib/language-strings/fr\";\r\nimport buildFormatter from \"react-timeago/lib/formatters/buildFormatter\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\n\r\n// Props\r\ninterface IDateToolProps {\r\n    datetime: Date | string | number;\r\n    prefix: string;\r\n}\r\n\r\nexport class DateTool extends React.Component<IDateToolProps, Object> {\r\n    static defaultProps = {\r\n        prefix: \"\"\r\n    };\r\n\r\n    private static formatter: any = buildFormatter(fr);\r\n    private datetime: Date;\r\n\r\n    constructor(props: IDateToolProps) {\r\n        super(props);\r\n\r\n        if (props.datetime instanceof Date) {\r\n            this.datetime = props.datetime as Date;\r\n        } else {\r\n            this.datetime = new Date(props.datetime);\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        if ((Date.now() - this.datetime.getTime()) >= 86400000) { // one day\r\n            return <React.Fragment>\r\n                { this.props.prefix }\r\n                <Moment format=\"DD/MM/YYYY à HH:mm\">{ this.datetime.toString() }</Moment>\r\n            </React.Fragment>;\r\n        } else {\r\n            return <TimeAgo date={ this.datetime.toString() } formatter={ DateTool.formatter } />\r\n        }\r\n    }\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { DateTool } from \"../tools/DateTool\";\r\nimport { ITicket } from \"../../models/ITicket\";\r\n\r\n// Props\r\ninterface ITicketProps {\r\n    ticket: ITicket;\r\n}\r\n\r\n// State\r\ninterface ITicketState {\r\n    ticket: ITicket;\r\n    isClosed: boolean;\r\n}\r\n\r\nexport class TicketItem extends React.Component<ITicketProps, ITicketState> {\r\n    constructor(props: ITicketProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ticket: this.props.ticket,\r\n            isClosed: [\"done\", \"solution\"].includes(this.props.ticket.status.category.shortname)\r\n        };\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        if (this.state.ticket) {\r\n            return <tr className={ this.state.isClosed ? \"ticket-item closed\" : \"ticket-item\" }>\r\n                <td className=\"ticket-item__toggle\"><input type=\"checkbox\" /></td>\r\n                <td className=\"ticket-item__id\">\r\n                    <a href={ \"/tickets/\" + this.state.ticket.id }>{ this.state.ticket.id }</a>\r\n                </td>\r\n                <td className=\"ticket-item__color\" style={{ backgroundColor: this.state.ticket.color == null ? \"\" : \"#\" + this.state.ticket.color }}></td>\r\n                <td className=\"ticket-item__tracker\">\r\n                    <a href={ \"/tickets/tracker/\" + this.state.ticket.tracker.id }>{ this.state.ticket.tracker.name }</a>\r\n                </td>\r\n                <td className=\"ticket-item__status\">\r\n                    <a href={ \"/tickets/status/\" + this.state.ticket.status.id }>{ this.state.ticket.status.name }</a>\r\n                </td>\r\n                <td className=\"ticket-item__priority\">\r\n                    <a href={ \"/tickets/priority/\" + this.state.ticket.priority.id }>{ this.state.ticket.priority.name }</a>\r\n                </td>\r\n                <td className=\"ticket-item__subject\">\r\n                    <a href={ \"/tickets/\" + this.state.ticket.id }>{ this.state.ticket.summary }</a>\r\n                </td>\r\n                <td className=\"ticket-item__reporter_by\">\r\n                    <a href={ this.state.ticket.reporter == null ? \"#\" : \"/tickets/reporter/\" + this.state.ticket.reporter.id }>{ this.state.ticket.reporter == null ? \"\" : this.state.ticket.reporter.pseudo }</a>\r\n                </td>\r\n                <td className=\"ticket-item__assign_to\">\r\n                    <a href={ this.state.ticket.assignee == null ? \"#\" : \"/tickets/assignee/\" + this.state.ticket.assignee.id }>{ this.state.ticket.assignee == null ? \"\" : this.state.ticket.assignee.pseudo }</a>\r\n                </td>\r\n                <td className=\"ticket-item__update_at\">\r\n                    {\r\n                        this.state.ticket.updated && <DateTool datetime={ this.state.ticket.updated } />\r\n                    }\r\n                </td>\r\n                <td className=\"ticket-item__tags\"></td>\r\n            </tr>;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","export enum FetchType {\r\n    GET = \"get\",\r\n    DELETE = \"delete\",\r\n    POST = \"post\",\r\n    PUT = \"put\"\r\n};\r\n\r\nexport class FetchException extends Error {\r\n    constructor(public code: number, message: string, public errors: Array<string> = []) {\r\n        super(message);\r\n    }\r\n}\r\n\r\nexport class Fetch<T> {\r\n    public accept: string = \"application/json\";\r\n    public contentType: string = \"application/json\";\r\n    public origin: string = \"http://evil.com\"; // trick\r\n\r\n    constructor(public readonly address: string, public type: FetchType = FetchType.GET, public body: Object = new Object()) {\r\n    }\r\n\r\n    private prepareStatement(): Promise<Response> {\r\n        const headers: Headers = new Headers({\r\n            accept: this.accept,\r\n            \"content-type\": this.contentType,\r\n            origin: this.origin\r\n        });\r\n\r\n        if (this.type == FetchType.GET) {\r\n            return fetch(this.address, {\r\n                method: this.type,\r\n                headers\r\n            });\r\n        } else {\r\n            return fetch(this.address, {\r\n                method: this.type,\r\n                headers,\r\n                body: JSON.stringify(this.body)\r\n            });\r\n        }\r\n    }\r\n\r\n    public async json(): Promise<T> {\r\n        try {\r\n            const response: Response = await this.prepareStatement();\r\n\r\n            if (response.ok) {\r\n                const { data } = await response.json();\r\n                return Promise.resolve(<T>data);\r\n            } else {\r\n                const exception: FetchException = new FetchException(response.status, response.statusText);\r\n\r\n                if (response.headers.get(\"content-type\").includes(\"application/json\")) { // error from server\r\n                    const { errors } = await response.json();\r\n                    exception.errors = errors;\r\n                }\r\n\r\n                throw exception;\r\n            }\r\n        } catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n}\r\n","import { ITicket } from \"./models/ITicket\";\r\nimport { IStatus } from \"./models/IStatus\";\r\nimport { IPriority } from \"./models/IPriority\";\r\nimport { ITracker } from \"./models/ITracker\";\r\nimport { IRegion } from \"./models/IRegion\";\r\nimport { Fetch } from \"./utils/Fetch\";\r\n\r\nexport class Path {\r\n    public static readonly host: string = \"http://localhost:3001\";\r\n\r\n    public static resolve(address: string): string {\r\n        return new URL(address, Path.host).href;\r\n    }\r\n}\r\n\r\nexport class Ticket {\r\n    public static async find(address: string): Promise<Array<ITicket>> {\r\n        return await new Fetch<Array<ITicket>>(Path.resolve(address)).json();\r\n    }\r\n\r\n    public static async findOne(ticketId: number): Promise<ITicket> {\r\n        return await new Fetch<ITicket>(Path.resolve(\"/tickets/\" + ticketId)).json();\r\n    }\r\n};\r\n\r\nexport class Status {\r\n    public static async find(): Promise<Array<IStatus>> {\r\n        return await new Fetch<Array<IStatus>>(Path.resolve(\"/status\")).json();\r\n    }\r\n}\r\n\r\nexport class Priority {\r\n    public static async find(): Promise<Array<IPriority>> {\r\n        return await new Fetch<Array<IPriority>>(Path.resolve(\"/priorities\")).json();\r\n    }\r\n}\r\n\r\nexport class Tracker {\r\n    public static async find(): Promise<Array<ITracker>> {\r\n        return await new Fetch<Array<ITracker>>(Path.resolve(\"/trackers\")).json();\r\n    }\r\n}\r\n\r\nexport class Region {\r\n    public static async find(): Promise<Array<IRegion>> {\r\n        return await new Fetch<Array<IRegion>>(Path.resolve(\"/regions\")).json();\r\n    }\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { TicketItem } from \"./TicketItem\";\r\nimport { TicketContent } from \"./TicketContent\";\r\nimport { ITicket } from \"../../models/ITicket\";\r\nimport * as Api from \"../../Api\";\r\n\r\nimport \"react-simple-flex-grid/lib/main.css\";\r\nimport \"./TicketList.scss\";\r\n\r\n// Props\r\ninterface ITicketListProps {\r\n    address: string;\r\n}\r\n\r\n// State\r\ninterface ITicketListState {\r\n    tickets: Array<ITicket>;\r\n}\r\n\r\nexport class TicketList extends React.Component<ITicketListProps, ITicketListState> {\r\n    constructor(props: ITicketListProps) {\r\n        super(props);\r\n\r\n        this.state = { tickets: new Array<ITicket>() };\r\n    }\r\n\r\n    public async componentDidMount(): Promise<void> {\r\n        try {\r\n            this.setState({ tickets: await Api.Ticket.find(this.props.address) });\r\n        } catch(err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        return <table className=\"ticket-list\">\r\n            <thead>\r\n                <tr>\r\n                    <th><input type=\"checkbox\" title=\"Tout cocher / décocher\" /></th>\r\n                    <th>#</th>\r\n                    <th></th>\r\n                    <th>Tracker</th>\r\n                    <th>Statut</th>\r\n                    <th>Priorité</th>\r\n                    <th>Sujet</th>\r\n                    <th>Reporté par</th>\r\n                    <th>Assigné à</th>\r\n                    <th>Dernière mise à jour</th>\r\n                    <th>Tags</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody className=\"ticket-list__content\">\r\n                {\r\n                    this.state.tickets.map(ticket => {\r\n                        return <TicketItem ticket={ ticket } />\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { StatusItemUniversal } from \"./StatusItemUniversal\";\r\nimport { IUniversal } from \"../../models/IUniversal\";\r\n\r\nimport \"./ListUniversal.scss\";\r\n\r\n// Props\r\ninterface IListUniversalProps {\r\n    property: string;\r\n    value: IUniversal;\r\n    model: string;\r\n    required: boolean;\r\n    readonly: boolean;\r\n    onFetch: (model: string) => Promise<Array<IUniversal>>;\r\n    onChange: (model: string, ref: IUniversal, readonly: boolean) => void;\r\n}\r\n\r\n// State\r\ninterface IListUniversalState {\r\n    items: Array<IUniversal>;\r\n    itemId: number;\r\n    error: boolean;\r\n    required: boolean;\r\n    readonly: boolean;\r\n}\r\n\r\nexport class ListUniversal extends React.Component<IListUniversalProps, IListUniversalState> {\r\n    public static defaultProps = {\r\n        required: false,\r\n        readonly: false\r\n    };\r\n    \r\n    constructor(props: IListUniversalProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: null,\r\n            itemId: this.props.value.id,\r\n            error: null,\r\n            required: props.required,\r\n            readonly: props.readonly\r\n        };\r\n    }\r\n\r\n    public async componentDidMount(): Promise<void> {\r\n        try {\r\n            this.setState({ items: await this.props.onFetch(this.props.model) });\r\n        } catch(err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    private updateItem(event): void {\r\n        if (!this.state.readonly) {\r\n            const itemId: number = +event.target.value;\r\n            const item = this.state.items.find(item => item.id === itemId);\r\n\r\n            if (item == undefined && this.state.required) {\r\n                this.setState({ error: true });\r\n                return;\r\n            }\r\n\r\n            this.setState({ itemId, error: false });\r\n            this.props.onChange(this.props.model, item, this.state.readonly);\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        if (this.state.items) {\r\n            return <table className=\"list-universal\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"input-universal__status\">\r\n                            <StatusItemUniversal\r\n                                fields={ this.props.property } \r\n                                error={ this.state.error }\r\n                                readonly={ this.state.readonly } />\r\n                        </td>\r\n                        <th>{ this.props.property }</th>\r\n                        <td>\r\n                            <select disabled={ this.state.readonly } onChange={ this.updateItem.bind(this) } value={ this.state.itemId }>\r\n                                {\r\n                                    this.state.required || <option></option>\r\n                                }\r\n                                {\r\n                                    this.state.items.map(item => {\r\n                                        return <option value={ item.id }>{ item.name }</option>;\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\n\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\nimport \"./EditorUniversal.scss\";\r\n\r\ntype Mode = \"write\" | \"preview\";\r\n\r\n// Props\r\ninterface IEditorUniversalProps {\r\n    value: string;\r\n    model: string;\r\n    readonly: boolean;\r\n    onChange: (model: string, data: string, readonly: boolean) => void;\r\n}\r\n\r\n// State\r\ninterface IEditorUniversalState {\r\n    value: string;\r\n    mode: Mode;\r\n    readonly: boolean;\r\n}\r\n\r\nexport class EditorUniversal extends React.Component<IEditorUniversalProps, IEditorUniversalState> {\r\n    public static defaultProps = {\r\n        readonly: false\r\n    };\r\n\r\n    private converter: Showdown.Converter;\r\n    \r\n    constructor(props: IEditorUniversalProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: props.value,\r\n            mode: \"preview\",\r\n            readonly: props.readonly\r\n        };\r\n\r\n        this.converter = new Showdown.Converter({\r\n            tables: true,\r\n            simplifiedAutoLink: true,\r\n            strikethrough: true,\r\n            tasklists: true\r\n        });\r\n    }\r\n\r\n    private updateValue(value: string): void {\r\n        this.setState({ value });\r\n        this.props.onChange(this.props.model, value, this.state.readonly);\r\n    }\r\n\r\n    private trick(mode: Mode): void {\r\n        if (!this.props.readonly) {\r\n            this.setState(state => {\r\n                return state.mode == mode ? null : { mode };\r\n            });\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        return <React.Fragment>\r\n            <ReactMde\r\n                onChange={ this.updateValue.bind(this) }\r\n                value={ this.state.value }\r\n                readOnly={ this.props.readonly }\r\n                selectedTab={ this.state.mode }\r\n                onTabChange={ this.trick.bind(this) }\r\n                className={ [ \"editor-universal\" ].concat(this.props.readonly ? \"editor-universal__hide\" : []).join(\" \") }\r\n                minPreviewHeight={ 0 }\r\n                minEditorHeight={ 270 }\r\n                generateMarkdownPreview={ markdown =>\r\n                    Promise.resolve(this.converter.makeHtml(markdown))\r\n                } />\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as Flex from \"react-simple-flex-grid\";\r\n\r\nimport { DateTool } from \"../tools/DateTool\";\r\nimport { ListUniversal } from \"../tools/ListUniversal\";\r\nimport { EditorUniversal } from \"../tools/EditorUniversal\";\r\nimport { InputUniversal, InputUniversalType } from \"../tools/InputUniversal\";\r\nimport { MapUniversal } from \"../tools/MapUniversal\";\r\nimport { CommentList } from \"./CommentList\";\r\nimport { ITicket } from \"../../models/ITicket\";\r\nimport { IUniversal } from \"../../models/IUniversal\";\r\nimport * as Api from \"../../Api\";\r\n\r\nimport \"./TicketContent.scss\";\r\n\r\n// Props\r\ninterface ITicketContentProps {\r\n    ticket: ITicket;\r\n    ticketId: number;\r\n    readonly: boolean;\r\n    archived: boolean;\r\n}\r\n\r\n// State\r\ninterface ITicketContentState {\r\n    ticket: ITicket;\r\n    readonly: boolean;\r\n    archived: boolean;\r\n}\r\n\r\nexport class TicketContent extends React.Component<ITicketContentProps, ITicketContentState> {\r\n    public static defaultProps: ITicketContentProps = {\r\n        ticket: null,\r\n        ticketId: 0,\r\n        readonly: false,\r\n        archived: false\r\n    };\r\n\r\n    constructor(props: ITicketContentProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ticket: props.ticket,\r\n            readonly: props.readonly || props.archived,\r\n            archived: props.archived\r\n        };\r\n    }\r\n\r\n    public async componentDidMount(): Promise<void> {\r\n        try {\r\n            if (this.props.ticket == null) {\r\n                const ticket: ITicket = await Api.Ticket.findOne(this.props.ticketId);\r\n                this.setState({ ticket });\r\n            }\r\n        } catch(err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    private fetchListUniversal(model: string): Promise<Array<IUniversal>> {\r\n        if (model == \"status\") {\r\n            return Api.Status.find();\r\n        } else if (model == \"priority\") {\r\n            return Api.Priority.find();\r\n        } else if (model == \"tracker\") {\r\n            return Api.Tracker.find();\r\n        } else if (model == \"region\") {\r\n            return Api.Region.find();\r\n        }\r\n\r\n        return Promise.reject(\"unknown model\");\r\n    }\r\n\r\n    private updateListUniversal(model: string, ref: IUniversal, readonly: boolean): void {\r\n        if (!readonly) {\r\n            const ticket: ITicket = this.state.ticket;\r\n            ticket[model] = ref || null;\r\n\r\n            this.setState({ ticket });\r\n        }\r\n    }\r\n\r\n    private updateEditorUniversal(model: string, value: string, readonly: boolean): void {\r\n        if (!readonly) {\r\n            if (model == \"ticket\") {\r\n                const ticket: ITicket = this.state.ticket;\r\n                ticket.description = value ? btoa(value) : null;\r\n\r\n                this.setState({ ticket });\r\n            }\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        if (this.state.ticket) {\r\n            return <section className={ [ \"ticket-content\" ].concat(this.state.archived ? \"ticket-content__archived\" : []).join(\" \") }>\r\n                <header>\r\n                    <Flex.Row align=\"middle\">\r\n                        <Flex.Col xs={ 1 }>\r\n                            <img className=\"ticket-content__gravatar\" title=\"Auteur\" src=\"https://www.gravatar.com/avatar/54fc98617b5c0b9a77a8b05f0879490c?rating=PG&size=50&default=wavatar\" />\r\n                        </Flex.Col>\r\n                        <Flex.Col xs={ 11 }>\r\n                            <div className=\"ticket-content__subject\">\r\n                                <strong>{ this.state.ticket.summary }</strong><br />\r\n                                <small>Ajouté par <a href={ \"/tickets/reporter/\" + this.state.ticket.reporter.id }>{ this.state.ticket.reporter.pseudo }</a> <DateTool datetime={ this.state.ticket.created } prefix=\"le \" />. </small>\r\n                                {\r\n                                    this.state.ticket.updated && <small>Mise à jour <DateTool datetime={ this.state.ticket.updated } prefix=\"le \" />.</small>\r\n                                }\r\n                            </div>\r\n                        </Flex.Col>\r\n                    </Flex.Row>\r\n                </header>\r\n\r\n                <section className=\"ticket-content__body\">\r\n                    <Flex.Row>\r\n                        <Flex.Col xs={ 12 } md={ 6 }>\r\n                            <ListUniversal \r\n                                property=\"Statut\" \r\n                                value={ this.state.ticket.status } \r\n                                model=\"status\" \r\n                                onChange={ this.updateListUniversal.bind(this) } \r\n                                onFetch={ this.fetchListUniversal.bind(this) } \r\n                                required={ true } \r\n                                readonly={ this.state.readonly } />\r\n                        </Flex.Col>\r\n                        <Flex.Col xs={ 12 } md={ 6 }>\r\n                            <ListUniversal \r\n                                property=\"Priorité\" \r\n                                value={ this.state.ticket.priority } \r\n                                model=\"priority\" \r\n                                onChange={ this.updateListUniversal.bind(this) } \r\n                                onFetch={ this.fetchListUniversal.bind(this) } \r\n                                required={ true } \r\n                                readonly={ this.state.readonly } />\r\n                        </Flex.Col>\r\n                    </Flex.Row>\r\n\r\n                    <Flex.Row>\r\n                        <Flex.Col xs={ 12 } md={ 6 }>\r\n                            <InputUniversal\r\n                                property=\"Couleur\" \r\n                                value={ this.state.ticket.color ? \"#\" + this.state.ticket.color : \"#ffffff\" } \r\n                                type={ InputUniversalType.color } \r\n                                required={ false } \r\n                                readonly={ this.state.readonly } />\r\n                        </Flex.Col>\r\n                        <Flex.Col xs={ 12 } md={ 6 }>\r\n                            <ListUniversal \r\n                                property=\"Catégorie\" \r\n                                value={ this.state.ticket.tracker } \r\n                                model=\"tracker\" \r\n                                onChange={ this.updateListUniversal.bind(this) } \r\n                                onFetch={ this.fetchListUniversal.bind(this) } \r\n                                required={ true } \r\n                                readonly={ true } />\r\n                        </Flex.Col>\r\n                    </Flex.Row>\r\n\r\n                    <Flex.Row>\r\n                        <Flex.Col xs={ 12 } md={ 6 }>\r\n                            <ListUniversal \r\n                                property=\"Région\" \r\n                                value={ this.state.ticket.region } \r\n                                model=\"region\" \r\n                                onChange={ this.updateListUniversal.bind(this) } \r\n                                onFetch={ this.fetchListUniversal.bind(this) } \r\n                                required={ true } \r\n                                readonly={ true } />\r\n                        </Flex.Col>\r\n                    </Flex.Row>\r\n\r\n                    {\r\n                        /*\r\n                            Custom universals\r\n                        */\r\n                    }\r\n\r\n                    <hr />\r\n\r\n                    <Flex.Row>\r\n                        <Flex.Col xs={ 12 } md={ 6 }>\r\n                            <InputUniversal\r\n                                property=\"Client\" \r\n                                value=\"toto\" \r\n                                type={ InputUniversalType.text } \r\n                                required={ true } \r\n                                readonly={ true } />\r\n                        </Flex.Col>\r\n                        <Flex.Col xs={ 12 } md={ 6 }>\r\n                            <InputUniversal\r\n                                property=\"Age\" \r\n                                value=\"\" \r\n                                type={ InputUniversalType.number } \r\n                                min={ 0 } \r\n                                max={ 100 } \r\n                                required={ true } \r\n                                readonly={ this.state.readonly } />\r\n                        </Flex.Col>\r\n                    </Flex.Row>\r\n\r\n                    <div className=\"ticket-content__description\">\r\n                        <EditorUniversal \r\n                            value={ this.state.ticket.description ? atob(this.state.ticket.description) : \"\" } \r\n                            model=\"ticket\"\r\n                            onChange={ this.updateEditorUniversal.bind(this) } \r\n                            readonly={ this.state.readonly } />\r\n                    </div>\r\n                </section>\r\n            </section>;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport * as Flex from \"react-simple-flex-grid\";\r\n\r\nimport { TicketList } from \"./components/ticket/TicketList\";\r\nimport { TicketContent } from \"./components/ticket/TicketContent\";\r\n\r\nrender(\r\n    <Flex.Row>\r\n        <Flex.Col xs={ 12 } sm={ 9 }>\r\n            <TicketList address=\"/tickets/region/1\" />\r\n        </Flex.Col>\r\n        <Flex.Col xs={ 0 } sm={ 5 }></Flex.Col>\r\n    </Flex.Row>,\r\n    document.querySelector(\"#root\") as Element\r\n);\r\n\r\nrender(\r\n    <Flex.Row>\r\n        <Flex.Col xs={ 12 } sm={ 9 }>\r\n            <TicketContent ticketId={ 1 } />\r\n        </Flex.Col>\r\n        <Flex.Col xs={ 0 } sm={ 5 }></Flex.Col>\r\n    </Flex.Row>,\r\n    document.querySelector(\"#ticket\")\r\n);\r\n"],"sourceRoot":""}